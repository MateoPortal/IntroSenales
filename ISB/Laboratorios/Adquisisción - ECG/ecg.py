# -*- coding: utf-8 -*-
"""ECG.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mk7HH4lgytMV4XNjIzpNiAA_mCLT4bfV

# Lectura y graficación de una señal almacenada en un archivo txt
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import re

"""## Leemos el archivo excluyendo las 2 primeras filas del archivo"""

array = np.genfromtxt("./ECG_reposo.txt", delimiter="\t",skip_header = 3)
array1 = np.genfromtxt("./ECG_respirar.txt", delimiter="\t",skip_header = 3)
array2 = np.genfromtxt("./ECG_deporte.txt", delimiter="\t",skip_header = 3)
#array

data_mV_ECG_reposo = (array[:,-2])*(3.3/1023) #resolucion*Vref/1023 segun el puerto A2 para ECG
data_mV_ECG_respiracion = (array1[:,-2])*(3.3/1023) #resolucion*Vref/1023 segun el puerto A2 para ECG
data_mV_ECG_deporte = (array2[:,-2])*(3.3/1023) #resolucion*Vref/1023 segun el puerto A2 para ECG

"""## Ploteo de la lectura"""

plt.figure(figsize=(40,10))
plt.suptitle("Señal ECG en el tiempo");

t1=np.arange(0,len(data_mV_ECG_reposo[30000:34000]))/1000
plt.subplot(1,3,1);plt.plot(t1,data_mV_ECG_reposo[30000:34000]),plt.ylabel("mV"),plt.xlabel("Tiempo (s)"),plt.title("En Reposo")
t2=np.arange(0,len(data_mV_ECG_respiracion[30000:34000]))/1000
plt.subplot(1,3,2);plt.plot(t2,data_mV_ECG_respiracion[30000:34000]),plt.ylabel("mV"),plt.xlabel("Tiempo (s)"),plt.title("Durante Respiración y exhalación")
t3=np.arange(0,len(data_mV_ECG_deporte[30000:34000]))/1000
plt.subplot(1,3,3);plt.plot(t3,data_mV_ECG_deporte[30000:34000]),plt.ylabel("mV"),plt.xlabel("Tiempo (s)"),plt.title("Tras realizar ejercicio físico")



"""## La forma de sabes la frecuencia de la señal es viendo en el dominio de la frecuencia"""

N = 2**10                                     # 10 bits, 0-1023
Fs=1000
F_list = np.linspace(0,Fs/2, N//2)
signal1 = data_mV_ECG_reposo; signal2 = data_mV_ECG_respiracion; signal3 = data_mV_ECG_deporte

signal_fft1 = np.round(np.abs(np.fft.fft(signal1, N)),3)[0:N//2] # nos quedamos con los componente de la derecha de la FFT
signal_aux1 = signal_fft1/signal_fft1.max()     # hallamos el maximo para pasar la magnitud a escala db
with np.errstate(divide='ignore'):
    signal_fft_db1 = 10*np.log10(signal_aux1)  # , out=signal_aux, where=signal_aux >= 0 para evitar division por zero
F1 = np.round(F_list[np.argmax(signal_fft_db1)], 1)   # argmax, encuentra el argumento max en un array

signal_fft2 = np.round(np.abs(np.fft.fft(signal2, N)),3)[0:N//2]
signal_aux2 = signal_fft2/signal_fft2.max()   
with np.errstate(divide='ignore'):
    signal_fft_db2 = 10*np.log10(signal_aux2) 
F2 = np.round(F_list[np.argmax(signal_fft_db2)], 1)  

signal_fft3 = np.round(np.abs(np.fft.fft(signal3, N)),3)[0:N//2] 
signal_aux3 = signal_fft3/signal_fft3.max()    
with np.errstate(divide='ignore'):
    signal_fft_db3 = 10*np.log10(signal_aux3)  
F3 = np.round(F_list[np.argmax(signal_fft_db3)], 1) 

plt.figure(figsize=(40,20))
plt.subplot(3,1,1);plt.plot(F_list, signal_fft_db1);plt.text(F1,0, f"{F1}Hz");plt.grid(linestyle=":");plt.ylabel("Magnitud (db)");plt.xlabel("Frecuencias (Hz)");plt.title("En Reposo")
plt.subplot(3,1,2);plt.plot(F_list, signal_fft_db2);plt.text(F2,0, f"{F2}Hz");plt.grid(linestyle=":");plt.ylabel("Magnitud (db)");plt.xlabel("Frecuencias (Hz)");plt.title("Durante Respiracion y exhalación")
plt.subplot(3,1,3);plt.plot(F_list, signal_fft_db3);plt.text(F3,0, f"{F3}Hz");plt.grid(linestyle=":");plt.ylabel("Magnitud (db)");plt.xlabel("Frecuencias (Hz)");plt.title("Tras realizar ejercicio físico")

plt.show()